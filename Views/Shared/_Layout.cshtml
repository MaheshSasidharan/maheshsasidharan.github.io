@using CCOM.Sso.Helpers
@using DemoApp.Utility
@using DemoApp.Domain.Live;

<!DOCTYPE html>
<meta http-equiv="X-UA-Compatible" content="IE=Edge">
<html lang="@LocalizationHelper.Lang" ng-app="AnnualReview">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="icon" href="https://oapp2.healthcare.uiowa.edu/images/IMicon.ico" type="image/x-icon">
    @RenderSection("meta", required: false)
    <title>@ViewBag.Title</title>

    <link rel="stylesheet" href="~/Content/bootstrap.css" type="text/css" />
    <link rel="stylesheet" href="~/Content/Library/ui-grid.min.css" type="text/css" />
    <link rel="stylesheet" href="~/Content/App/App.css" />

    <script src="~/Scripts/Library/angular.min.js"></script>
    <script src="//ajax.googleapis.com/ajax/libs/angularjs/1.5.0-beta.1/angular-route.js"></script>
    <script src="~/Scripts/Library/ui-grid.min.js"></script>

    <script src="~/Scripts/Library/ui-bootstrap-tpls-0.13.4.min.js"></script>
    <script src="~/Scripts/App/App.js"></script>
    <script src="~/Scripts/App/Common/Constants.js"></script>
    <script src="~/Scripts/App/Common/CommonRoutines.js"></script>
    <script src="~/Scripts/App/Common/DataService.js"></script>
    <script src="~/Scripts/App/Common/Directives.js"></script>

    @Html.Partial("_html5shiv")

</head>
<body role="document" ng-controller="LayoutPage">
    <div class="Notification" ng-cloak ng-class="Notification.sType" ng-show="Notification.bShow">
        {{Notification.sTitle}}
        <button type="button" class="btn btn-default as-btn-text as-refresh-btn CC_ClosePopup CC_CloseNotification" ng-click="Notification.HideNotification()">X</button>
    </div>
    <div class="container">
        <div class="navbar navbar-inverse navbar-fixed-top">
            <div class="container-fluid">
                <div class="capitalLogo">
                </div>
                <a class="navbar-brand" href="@SsoLinkExtensions.GetSsoCrossSiteUrl(SsoLinkExtensions.SiteLocation.Development, "AskIM", "Index", "Home")">AskIM</a>
                <a class="navbar-brand" href="@SsoLinkExtensions.GetSsoCrossSiteUrl(SsoLinkExtensions.SiteLocation.Development, "DemoApp", "Index", "Home")">IM Annual Review</a>
                <div class="navbar-collapse collapse">
                    <p class="navbar-text pull-right">
                        @Html.Partial("_LogOnPartial")
                    </p>
                    <ul class="nav navbar-nav">
                        <li class="@ActiveItem("Index", "Home", "")">@Html.ActionLink("Home", "Index", "Home", new { area = "" }, null)</li>
                        @if (AppSession.RoleList != null)
                        {
                            if (AppSession.RoleList.Contains("Admin"))
                            {
                            <li>@Html.ActionLink("Admin", "Index", "AppUser", new { area = "admin" }, null)</li>
                            }
                        }
                    </ul>
                </div><!--/.nav-collapse -->
            </div>
        </div>

        @RenderBody()

        <div class="navbar navbar-fixed-bottom CC_Footer">
            <div class="container">
                <p class="muted credit text-center">
                    <a href="http://www.medicine.uiowa.edu" target="_blank">University of Iowa Carver College of Medicine</a> |
                    <a href="http://www.medicine.uiowa.edu/it_sub.aspx?id=327" target="_blank">CCOM Application Development</a>
                </p>
            </div>
        </div> <!-- /container -->
    </div>

</body>
</html>

@helper ActiveItem(string areaName)
{
    if (ViewContext.RouteData.DataTokens["area"] == null ||
        ViewContext.RouteData.DataTokens["area"].ToString() == areaName)
    {
        @:text-decoration: none; background-color: #e3e3e3; color: #245269;
    }
}

@helper ActiveItem(string actionName, string controllerName, string areaName)
{
    if (ViewContext.RouteData.Values["action"].ToString() == actionName &&
        ViewContext.RouteData.Values["controller"].ToString() == controllerName &&
            (ViewContext.RouteData.DataTokens["area"] == null ||
            ViewContext.RouteData.DataTokens["area"].ToString() == areaName))
    {
        @:active
    }
}
